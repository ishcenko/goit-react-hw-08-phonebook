{"version":3,"file":"static/js/427.9952dca2.chunk.js","mappings":"2NAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qZAoBxBC,EAAYH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uGAMpBG,EAAaL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4XAiBzBK,EAAQP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2RAepBO,EAAST,EAAAA,GAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sT,SCSnC,MA3DA,SAAiBS,GAAqC,IAAlCC,EAAQD,EAARC,SAAQC,EAAAF,EAAEG,YAAAA,OAAW,IAAAD,GAAQA,EACzCE,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UAezB,OACEG,EAAAA,EAAAA,MAACpB,EAAU,CAACa,SAdO,SAAAQ,GACnBA,EAAMC,iBAEN,IAAMC,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACPT,GAAe,CAAEU,KAAMT,EAAaU,QAAQC,QAAS,CAAF,GACxDC,MAAOV,EAAcQ,QAAQC,MAC7BE,SAAUV,EAAiBO,QAAQC,QAErCd,EAASU,GAETF,EAAMS,OAAOC,OACf,EAGqCC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SAAEjB,EAAc,UAAY,YACrDA,EAAc,MACbK,EAAAA,EAAAA,MAAChB,EAAS,CAAA4B,SAAA,EACRC,EAAAA,EAAAA,KAAC3B,EAAU,CAAC4B,UAAU,aAAaC,QAAQ,OAAMH,SAAC,UAGlDC,EAAAA,EAAAA,KAACzB,EAAK,CAAC4B,KAAK,OAAOX,KAAK,OAAOY,IAAKrB,EAAcsB,UAAQ,QAG9DlB,EAAAA,EAAAA,MAAChB,EAAS,CAAA4B,SAAA,EACRC,EAAAA,EAAAA,KAAC3B,EAAU,CAAC4B,UAAU,aAAaC,QAAQ,QAAOH,SAAC,WAGnDC,EAAAA,EAAAA,KAACzB,EAAK,CAAC4B,KAAK,QAAQX,KAAK,QAAQY,IAAKnB,EAAeoB,UAAQ,QAE/DlB,EAAAA,EAAAA,MAAChB,EAAS,CAAA4B,SAAA,EACRC,EAAAA,EAAAA,KAAC3B,EAAU,CAAC4B,UAAU,aAAaC,QAAQ,WAAUH,SAAC,cAGtDC,EAAAA,EAAAA,KAACzB,EAAK,CACJ4B,KAAK,WACLX,KAAK,WACLc,UAAW,EACXF,IAAKlB,EACLmB,UAAQ,QAIZL,EAAAA,EAAAA,KAACvB,EAAM,CAAC0B,KAAK,SAAQJ,SAClBjB,EAAc,UAAY,wBAInC,C,gFC3CA,UAdA,WACE,IAAMyB,GAAWC,EAAAA,EAAAA,MAMjB,OACER,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACS,EAAAA,EAAQ,CAAC7B,SANM,SAAAU,GAClBiB,GAASG,EAAAA,EAAAA,IAAMpB,GACjB,EAIqCR,aAAW,KAGlD,C","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background: #fff;\n  padding: 2em 2em 2em;\n  max-width: 400px;\n  margin: 50px auto 0;\n  box-shadow: 0 0 1em #222;\n  border-radius: 2px;\n  @media (min-width: 768px) {\n    padding: 4em 4em 2em;\n  }\n\n  .form-title {\n    margin: 0 0 50px 0;\n    padding: 10px;\n    text-align: center;\n    font-size: 30px;\n    color: darken(#e5e5e5, 50%);\n    border-bottom: solid 1px #e5e5e5;\n  }\n`;\nexport const Paragraph = styled.p`\n  margin: 0 0 3em 0;\n  position: relative;\n  font-family: sans-serif;\n  font-size: 14px;\n`;\nexport const Floatlabel = styled.label`\n  position: absolute;\n  left: 8px;\n  top: 12px;\n  color: #999;\n  font-size: 16px;\n  display: inline-block;\n  padding: 4px 10px;\n  font-weight: 400;\n  background-color: transparent;\n  @include transition(color 0.3s, top 0.3s, background-color 0.8s);\n  &.floatLabel {\n    top: -11px;\n    background-color: rgba(255, 255, 255, 0.8);\n    font-size: 14px;\n  }\n`;\nexport const Input = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  outline: none;\n  margin: 0;\n  background: #fff;\n  border: 1px solid #dbdbdb;\n  font-size: 1.2em;\n  padding: 0.8em 0.5em;\n  border-radius: 2px;\n  @media (min-width: 768px) {\n    font-size: 1.6em;\n  }\n`;\nexport const Button = styled.button`\n  background: green;\n  box-shadow: 0 3px 0 0 grey;\n  border-radius: 2px;\n  border: none;\n  color: #fff;\n  cursor: pointer;\n  display: block;\n  margin: 0 auto;\n  outline: none;\n  padding: 10px 15px;\n  text-shadow: 0 1px #3616ef;\n\n  &:hover {\n    background: blue;\n    color: #fff;\n  }\n`;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  StyledForm,\n  Paragraph,\n  Floatlabel,\n  Input,\n  Button,\n} from './UserForm.styled';\n\nfunction UserForm({ onSubmit, isLoginForm = false }) {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      ...(!isLoginForm && { name: nameInputRef.current.value }),\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <h2 className=\"form-title\">{isLoginForm ? 'Sign In' : 'Sign Up'}</h2>\n      {isLoginForm ? null : (\n        <Paragraph>\n          <Floatlabel className=\"floatLabel\" htmlFor=\"name\">\n            Name\n          </Floatlabel>\n          <Input type=\"text\" name=\"name\" ref={nameInputRef} required />\n        </Paragraph>\n      )}\n      <Paragraph>\n        <Floatlabel className=\"floatLabel\" htmlFor=\"email\">\n          Email\n        </Floatlabel>\n        <Input type=\"email\" name=\"email\" ref={emailInputRef} required />\n      </Paragraph>\n      <Paragraph>\n        <Floatlabel className=\"floatLabel\" htmlFor=\"password\">\n          Password\n        </Floatlabel>\n        <Input\n          type=\"password\"\n          name=\"password\"\n          minLength={7}\n          ref={passwordInputRef}\n          required\n        />\n      </Paragraph>\n\n      <Button type=\"submit\">\n        {isLoginForm ? 'Sign In' : 'Create My Account'}\n      </Button>\n    </StyledForm>\n  );\n}\n\nUserForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default UserForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport UserForm from 'components/UserForm/UserForm.jsx';\nimport { login } from 'redux/user/operations';\n\nfunction Login() {\n  const dispatch = useDispatch();\n\n  const handleLogin = formData => {\n    dispatch(login(formData));\n  };\n\n  return (\n    <div>\n      <UserForm onSubmit={handleLogin} isLoginForm />\n    </div>\n  );\n}\n\nexport default Login;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","Paragraph","_templateObject2","Floatlabel","_templateObject3","Input","_templateObject4","Button","_templateObject5","_ref","onSubmit","_ref$isLoginForm","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","_jsxs","event","preventDefault","formData","_objectSpread","name","current","value","email","password","target","reset","children","_jsx","className","htmlFor","type","ref","required","minLength","dispatch","useDispatch","UserForm","login"],"sourceRoot":""}